{
	"name": "JuGio's High Contrast Dark Theme",
	"type": "dark",
	"colors": {
		"contrastActiveBorder": "#0000",
		"contrastBorder": "#fffa",

		"focusBorder": "#ff4",
		"foreground": "#fff",
		"widget.shadow": "#0000",
		"selection.background": "#ff48",
		"descriptionForeground": "#fff",
		"errorForeground": "#f00",
		"icon.foreground": "#fff",

		"window.activeBorder": "#fff",
		"window.inactiveBorder": "#fff8",

		"textBlockQuote.background": "#111",
		"textBlockQuote.border": "#fff8",
		"textCodeBlock.background": "#000",
		"textLink.activeForeground": "#88f",
		"textLink.foreground": "#aaF",
		"textPreformat.foreground": "#fff",
		"textSeparator.foreground": "#555",

		"button.background": "#ff4",
        "button.foreground": "#000",
		"button.hoverBackground": "#ff6",
		"button.secondaryForeground": "#000",
		"button.secondaryBackground": "#ff4",
		"button.secondaryHoverBackground": "#ff6",
		"checkbox.background": "#ff6",
		"checkbox.border": "#ff4",
		"checkbox.foreground": "#000",

        "dropdown.background": "#000",
        "dropdown.border": "#fff",
		"dropdown.listBackground": "#000",
		"dropdown.foreground": "#fff",

		"input.background": "#000",
		"input.border": "#fff",
		"input.foreground": "#fff",
		"input.placeholderForeground": "#ff4a",
		"inputOption.activeBackground": "#000",
		"inputOption.activeBorder": "#ff4",
		"inputOption.activeForeground": "#ff4",
		"inputValidation.errorBackground": "#822",
		"inputValidation.errorBorder": "#fff",
		"inputValidation.errorForeground": "#fff",
		"inputValidation.infoBackground": "#228",
		"inputValidation.infoBorder": "#fff",
		"inputValidation.infoForeground": "#fff",
		"inputValidation.warningBackground": "#852",
		"inputValidation.warningBorder": "#fff",
		"inputValidation.warningForeground": "#fff",

		"scrollbar.shadow": "#0000",
		"scrollbarSlider.activeBackground": "#fff",
		"scrollbarSlider.background": "#fff5",
		"scrollbarSlider.hoverBackground": "#fff",

		"badge.foreground": "#000",
		"badge.background": "#ff4",
		
		"progressBar.background": "#000",

		"list.activeSelectionBackground": "#fff5",
		"list.activeSelectionForeground": "#ff4",
		"list.dropBackground": "#fff2",
		"list.focusBackground": "#fff2",
		"list.focusForeground": "#fff",
		"list.highlightForeground": "#fff",
		"list.hoverBackground": "#fff2",
		"list.hoverForeground": "#fff",
		"list.inactiveSelectionBackground": "#fff4",
		"list.inactiveSelectionForeground": "#fff",
		"list.inactiveFocusBackground": "#fff2",
		"list.invalidItemForeground": "#f55",
		"list.errorForeground": "#f55",
		"list.warningForeground": "#faa",
		"tree.indentGuidesStroke": "#fff5",
		"list.deemphasizedForeground": "#fffa",
		
		"activityBar.background": "#000",
		"activityBar.dropBorder": "#fffa",
        "activityBar.foreground": "#fffd",
        "activityBar.inactiveForeground": "#fff5",
        // "activityBar.border": "#ffff40",
        "activityBarBadge.background": "#ffff40",
        "activityBarBadge.foreground": "#000000",
        // "activityBar.activeBorder": "#ff4",
		// "activityBar.activeBackground": "#f041",
		// "activityBar.activeFocusBorder": "#ff0000"

		"sideBar.background": "#000",
		"sideBar.foreground": "#fff",
		"sideBar.border": "#fffa",
		"sideBar.dropBackground": "#fff4",
		"sideBarTitle.foreground": "#fff",
        "sideBarSectionHeader.background": "#fff1",
        "sideBarSectionHeader.foreground": "#fffc",
		// "sideBarSectionHeader.border": "#fff"

		"minimap.findMatchHighlight": "#fff",
		"minimap.selectionHighlight": "#ff48",
		"minimap.errorHighlight": "#f00",
		"minimap.warningHighlight": "#fa0",
		"minimap.background": "#000",
		"minimapSlider.background": "#fff3",
		"minimapSlider.activeBackground": "#fff9",
		"minimapSlider.hoverBackground": "#fff9",
		"minimapGutter.addedBackground": "#ff0000",
		"minimapGutter.modifiedBackground": "#0af5",
		"minimapGutter.deletedBackground": "#f556",
		
		
		// "editorGroup.border": "#fffa",
		"editorGroup.dropBackground": "#111a",
		"editorGroupHeader.noTabsBackground": "#111",
		"editorGroupHeader.tabsBackground": "#000",
		"editorGroupHeader.tabsBorder": "#fffa",
		// "editorGroupHeader.border": "#ffff40",
		"editorGroup.emptyBackground": "#111",
		// "editorGroup.focusedEmptyBorder": "#ff0000",
        "tab.activeBackground": "#221",
		"tab.activeForeground": "#fff",
        "tab.inactiveBackground": "#000",
        "tab.inactiveForeground": "#fff8",
		"tab.unfocusedActiveBackground": "#1118",
		"tab.unfocusedActiveForeground": "#fffa",
        "tab.unfocusedInactiveBackground": "#000",
        "tab.unfocusedInactiveForeground": "#fff5",
        "tab.unfocusedActiveBorder": "#ff4a",
		//"tab.unfocusedActiveBorderTop": "#ff0000",
		// "tab.unfocusedActiveModifiedBorder": "#ff0000",
		"tab.unfocusedHoverBackground": "#fff1",
		// "tab.unfocusedHoverBorder": "#ff0000",
		"tab.unfocusedHoverForeground": "#fffa",
		// "tab.unfocusedInactiveModifiedBorder": "#ff0000",
        "tab.border": "#0000",
		"tab.activeBorder": "#ff4",
		// "tab.activeBorderTop": "#ff0000",
		// "tab.activeModifiedBorder": "#ff0000",
		"tab.hoverBackground": "#fff1",
		// "tab.hoverBorder": "#ff0000",
		"tab.hoverForeground": "#fffa",
		// "tab.inactiveModifiedBorder": "#ff0000",
		// "tab.lastPinnedBorder": "#ff0000",
		"editorPane.background": "#000",

		"editor.background": "#000",
		"editor.foreground": "#fff",
		"editorLineNumber.foreground": "#fff7",
		"editorLineNumber.activeForeground": "#ff4",
		// "editorCursor.background": "#ff0000",
		// "editorCursor.foreground": "#ff0000",
		"editor.selectionBackground": "#ff4d",
		"editor.selectionForeground": "#000",
        "editor.inactiveSelectionBackground": "#ff48",
        "editor.selectionHighlightBackground": "#fff2",
		"editor.selectionHighlightBorder": "#fff5",
		"editor.wordHighlightBackground": "#fff2",
		"editor.wordHighlightBorder": "#0000",
		"editor.wordHighlightStrongBackground": "#fff3",
		"editor.wordHighlightStrongBorder": "#ff4a",
		
		"editor.findMatchBackground": "#ff4",
		"editor.findMatchHighlightBackground": "#ff43",
		// "editor.findMatchBorder": "#ff0000",
		// "editor.findMatchHighlightBorder": "#ff0000",
		"editor.findRangeHighlightBackground": "#fff1",
		"editor.findRangeHighlightBorder": "#0000",
		
		"editor.hoverHighlightBackground": "#fff2",
		
        "editor.lineHighlightBackground": "#111",
		"editor.lineHighlightBorder": "#ff4c",
		
        "editorBracketMatch.background": "#fff2",
        "editorBracketMatch.border": "#ff48",
		"editorLink.activeForeground": "#88f",
		
		"editorWhitespace.foreground": "#fff2",
		"editorIndentGuide.background": "#fff3",
		"editorIndentGuide.activeBackground": "#fff6",
		"editorRuler.foreground": "#fff5",
		
		"editor.foldBackground": "#ff42",
		"editorUnnecessaryCode.opacity": "#0008",
		"editorUnnecessaryCode.border": "#555",

		"editorGutter.background": "#000",
		"editorGutter.addedBackground": "#5f5",
		"editorGutter.deletedBackground": "#f55",
		"editorGutter.modifiedBackground": "#0af",
		

		"panel.background": "#000",
		"panel.border": "#fffa",
		"panel.dropBorder": "#ff4",
		"panelTitle.activeBorder": "#ff4",
		"panelTitle.activeForeground": "#fff",
		"panelTitle.inactiveForeground": "#fffa",
		// "panelInput.border": "#ff0000",
		// "panelSection.border": "#ff0000",

		"imagePreview.border": "#fff",
        
        "statusBar.background": "#000",
        "statusBar.foreground": "#fffa",
        // "statusBar.border": "#ffffffa0",

		"menubar.selectionForeground": "#fff",
		"menubar.selectionBackground": "#0000",
		"menubar.selectionBorder": "#ff4",
        "menu.foreground": "#fffa",
        "menu.background": "#000",
        "menu.selectionForeground": "#fff",
        "menu.selectionBackground": "#fff1",
		"menu.selectionBorder": "#ff4",
		"menu.separatorBackground": "#fff",
		"menu.border": "#ff4",
	},
	// Global
    "tokenColors": [

        // @todo:
        // support.constant
		// support.module
		// Php
		// Docker
		// SQL
		
	{
		"name": "Comment",
		"scope": [
			"comment"
		],
		"settings": {
			"foreground": "#ff4d",
			"fontStyle": "italic"
		}
	},        
	{
		"name": "String",
		"scope": [
			"string.quoted"
		],
		"settings": {
			"foreground": "#8e8"
		}
	},
	{
		"name": "Regex Contents",
		"scope": [
			"string.regexp",
			"string.regexp keyword.control",
			"string.regexp keyword.operator"
		],
		"settings": {
			"foreground": "#8e8",
			"fontStyle": "italic"
		}
	},
	{
		"name": "Regex Container Punctuation",
		"scope": [
			"string.regexp punctuation.definition.string"
		],
		"settings": {
			"foreground": "#8e8",
			"fontStyle": "bold"
		}
	},
	{
		"name": "Regex Mode (`igm`)",
		"scope": [
			"string.regexp keyword.other"
		],
		"settings": {
			"foreground": "#f88"
		}
	},
	{
		"name": "Number",
		"scope": [
			"constant.numeric"
		],
		"settings": {
			"foreground": "#8df"
		}
	},
	{
		"name": "Language Constant (`true`, `false, `null`, etc.)",
		"scope": [
			"constant.language"
		],
		"settings": {
			"foreground": "#b9f",
			"fontStyle": "bold"
		}
	},
	{
		"name": "Language Variable (`this`, `self`, `super`, etc.)",
		"scope": [
			"variable.language"
		],
		"settings": {
			"foreground": "#b9f"
		}
	},
	{
		"name": "Language Method/Function (`setTimeout`, `printf`, etc.)",
		"scope": [
			"support.function"
		],
		"settings": {
			"foreground": "#b9f"
		}
	},
	{
		"name": "Operator (`+`, `-`, `!`, `typeof`, `instanceof`, etc.)",
		"scope": [
			"keyword.operator"
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Destructuring Punctuation (`[...] = [...]`, `{...} = {...}`)",
		"scope": [
			"punctuation.definition.binding-pattern",
			"meta.import punctuation.definition.block"
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Control Flow (`if`, `else`, `switch`, `return`, etc.)",
		"scope": [
			"keyword.control",
			"keyword.operator.expression",
			"keyword.operator.new"
		],
		"settings": {
			"foreground": "#8cf"
		}
	},
	{
		"name": "Storage Type (`function`, `class`, `int`, `bool`, etc.) and Storage Modifier (`public`, `private`, `static`, etc.)",
		"scope": [
			"storage.type",
			"storage.modifier"
		],
		"settings": {
			"foreground": "#8cf",
			"fontStyle": "italic"
		}
	},
	{
		"name": "Separator & Terminator Punctuation (`,`,`:`,`;`)",
		"scope": [
			"punctuation.separator",
			"punctuation.terminator"
		],
		"settings": {
			"foreground": "#bbb"
		}
	},
	{
		"name": "Function/Method Name (`function myFunc`)",
		"scope": [
			"entity.name.function"
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Function/Method Parens (`function myFunc()`)",
		"scope": [
			"punctuation.definition.parameters",
			"punctuation.definition.arguments"
		],
		"settings": {
			"foreground": "#fff",
			"fontStyle": ""
		}
	},
	{
		"name": "Function/Method Parameters (`function getFullName(fname = 'John', lname = 'Doe'`)",
		"scope": [
			"meta.parameters"
		],
		"settings": {
			"fontStyle": "italic"
		}
	},
	{
		"name": "Function/Method Parameter Name (`function getFullName(fname, lname`)",
		"scope": [
			"variable.parameter"
		],
		"settings": {
			"foreground": "#fff",
			"fontStyle": ""
		}
	},
	{
		"name": "Function/Method Name Invoked (`myFunc()`)",
		"scope": [
			"variable.function",
			"meta.function-call entity.name.function",
			"meta.method-call entity.name.function"
		],
		"settings": {
			"foreground": "#ffa"
		}
	},
	{
		"name": "Class Name (`class Target_Class extends Base_Class`)",
		"scope": [
			"entity.name.type.class",
			"entity.other.inherited-class",
			"support.class"
		],
		"settings": {
			"foreground": "#fba"
		}
	},

// HTML & XML

	{
		"name": "Doctype Declaration (`<!DOCTYPE html>`)",
		"scope": [
			"meta.tag.sgml",
			"meta.tag.sgml variable.language",
			"meta.tag.sgml punctuation.definition.tag"
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "XML Preprocessor (`<?xml ... ?>`)",
		"scope": [
			"meta.tag.preprocessor",
			"meta.tag.preprocessor entity.name.tag",
			"meta.tag.preprocessor punctuation.definition.tag"
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Tag Name",
		"scope": [
			"entity.name.tag"
		],
		"settings": {
			"foreground": "#f88"
		}
	},
	{
		"name": "Tag Brackets",
		"scope": [
			"punctuation.definition.tag"
		],
		"settings": {
			"foreground": "#bbb"
		}
	},
	{
		"name": "Attribute Name",
		"scope": [
			"entity.other.attribute-name"
		],
		"settings": {
			"foreground": "#bbf"
		}
	},
	{
		"name": "Script Tag Name & Brackets (`<script></script>`)",
		"scope": [
			"meta.tag.metadata.script entity.name.tag",
			"meta.tag.metadata.script punctuation.definition.tag"
		],
		"settings": {
			"foreground": "#f55"
		}
	},

// CSS & Sass

	{
		"name": "Property Name",
		"scope": [
			"support.type.property-name"
		],
		"settings": {
			"foreground": "#fca"
		}
	},
	{
		"name": "Property Value",
		"scope": [
			"meta.property-value"
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Selector Braces (`{}`)",
		"scope": [
			"punctuation.section"
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Variable (`--my-var`, `$my-var`)",
		"scope": [
			"variable.css",
			"variable.scss"
		],
		"settings": {
			"foreground": "#fff",
			"fontStyle": "italic"
		}
	},
	{
		"name": "Selector Punctuation (`#`, `.`, `:`, `::`, `[]`)",
		"scope": [
			"punctuation.definition.entity",
			"punctuation.definition.attribute-selector" // Attribute selector brackets in Sass (`[]`)
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Attribute Selector String Value", // temporary hack
		"scope": [
			"meta.attribute-selector"
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "At Rule (`@mixin`, `@import`, etc.)",
		"scope": [
			"keyword.control.at-rule",
			"keyword.control.at-rule punctuation"
		],
		"settings": {
			"foreground": "#88f",
			"fontStyle": "italic"
		}
	},
	{
		"name": "At Rule Function Name",
		"scope": [
			"meta.at-rule support.function"
		],
		"settings": {
			"foreground": "#bbf"
		}
	},
	{
		"name": "At Rule Function Parameter (`@mixin icon($name)`)",
		"scope": [
			"meta.at-rule.mixin variable.scss",
			"meta.at-rule.function variable.scss"
		],
		"settings": {
			"foreground": "#fff",
			"fontStyle": "italic"
		}
	},
	{
		"name": "At Rule Default Parameter Value (`@mixin icon($name, $position: left)`)",
		"scope": [
			"meta.at-rule.mixin support.constant",
			"meta.at-rule.mixin variable.parameter",
			"meta.at-rule.function support.constant",
			"meta.at-rule.function variable.parameter"
		],
		"settings": {
			"foreground": "#fff",
			"fontStyle": "italic"
		}
	},
	{
		"name": "At Rule Default Parameter Numeric Value (`@function pxToRem($number, $base: 14)`)",
		"scope": [
			"meta.at-rule.mixin constant.numeric",
			"meta.at-rule.function constant.numeric"
		],
		"settings": {
			"fontStyle": "italic"
		}
	},
	{
		"name": "Include At Rule (`@include`)",
		"scope": [
			"keyword.control.at-rule.include",
			"keyword.control.at-rule.include punctuation"
		],
		"settings": {
			"foreground": "#fbb",
			"fontStyle": ""
		}
	},
	{
		"name": "Function At Rule Parens (`@function fn()`)",
		"scope": [
			"meta.at-rule.function punctuation.section"
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Return At Rule (`@return #{$number / 14}rem`)",
		"scope": [
			"meta.at-rule.return" // in the example above this would target `rem`
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Return At Rule Braces (`@return $value / ($value * 100)`)",
		"scope": [
			"meta.at-rule.return punctuation.definition.begin.bracket",
			"meta.at-rule.return punctuation.definition.end.bracket"
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Function Invoked (`@include btn('primary')`, `color: darken($blue)`)",
		"scope": [
			"meta.at-rule.include entity.name.function",
			"meta.at-rule.include punctuation",
			"meta.property-value punctuation.section.function"
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Sass Interpolation Braces (`#{}`)",
		"scope": [
			"punctuation.definition.interpolation"
		],
		"settings": {
			"foreground": "#faa"
		}
	},
	{
		"name": "Sass Map Braces (`()`)",
		"scope": [
			"punctuation.definition.map"
		],
		"settings": {
			"foreground": "#faa"
		}
	},

// JavaScript & JSON

	{
		"name": "Block Comment",
		"scope": [
			"comment storage.type",
			"comment punctuation.definition.block"
		],
		"settings": {
			"foreground": "#bbb",
			"fontStyle": ""
		}
	},
	{
		"name": "Curly Braces (`{...}`)",
		"scope": [
			"punctuation.definition.block",
			"punctuation.definition.dictionary" // JSON
		],
		"settings": {
			"foreground": "#bbb"
		}
	},
	{
		"name": "Square Braces (`[...]`)",
		"scope": [
			"meta.brace.square",
			"punctuation.definition.array" // JSON
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Round Braces/Parens (`(...)`)",
		"scope": [
			"meta.brace.round"
		],
		"settings": {
			"foreground": "#fff"
		}
	},
	{
		"name": "Accessor Operator (`.`)",
		"scope": [
			"punctuation.accessor"
		],
		"settings": {
			"foreground": "#ffa"
		}
	},
	{
		"name": "Environment Objects (`document`, `window`, `console`, `module`)",
		"scope": [
			"support.variable.dom",
			"support.class.console",
			"support.type.object"
		],
		"settings": {
			"foreground": "#ffa"
		}
	},
	{
		"name": "Prototype Object (`Func.prototype`)",
		"scope": [
			"support.variable.property.js"
		],
		"settings": {
			"foreground": "#ffa"
		}
	},
	{
		"name": "Constructor Function Name (`Number`, `String`, etc.)",
		"scope": [
			"support.class.js",
			"support.class.builtin.js"
		],
		"settings": {
			"foreground": "#8cf"
		}
	},
	{
		"name": "Constructor Function Name Invoked (`Number()`, `String()`, etc.)",
		"scope": [
			"meta.function-call support.class.builtin.js",
			"new.expr entity.name.type.js"
		],
		"settings": {
			"foreground": "#8cf"
		}
	},
	{
		"name": "Constructor Function Name Prototype Read/Write (`Func.prototype = {...}`)",
		"scope": [
			"support.class.js"
		],
		"settings": {
			"foreground": "#fba"
		}
	},
	{
		"name": "Template String (``my template string``)",
		"scope": [
			"string.template.js",
			"punctuation.definition.string.template"
		],
		"settings": {
			"foreground": "#fda"
		}
	},
	{
		"name": "Template String Expression (``${MODULE}``)",
		"scope": [
			"meta.template.expression"
		],
		"settings": {
			"foreground": "#fda"
		}
	},
	{
		"name": "Template String Expression Punctuation (``${...}``)",
		"scope": [
			"punctuation.definition.template-expression"
		],
		"settings": {
			"foreground": "#fda"
		}
	},
	{
		"name": "JSON Property Name Quotes",
		"scope": [
			"punctuation.support.type.property-name"
		],
		"settings": {
			"foreground": "#fff"
		}
	},

// PHP

// 	{
// 		"name": "Embedded PHP Tags (`<?php ... ?>` in .phtml file)",
// 		"scope": [
// 			"punctuation.section.embedded"
// 		],
// 		"settings": {
// 			"foreground": "#A9B9B0"
// 		}
// 	},
// 	{
// 		"name": "Round Braces/Parens (`(...)`)",
// 		"scope": [
// 			"punctuation.definition.begin.bracket.round",
// 			"punctuation.definition.end.bracket.round"
// 		],
// 		"settings": {
// 			"foreground": "#C9E9E0"
// 		}
// 	},
// 	{
// 		"name": "Embedded Variables (`<img src='<?php echo $src; ?>'/>`)",
// 		"scope": [
// 			"variable.other.php"
// 		],
// 		"settings": {
// 			"foreground": "#F8F8F2"
// 		}
// 	},
// 	{
// 		"name": "Function/Method Parameter (`function getFullName($fname, $lname`)",
// 		"scope": [
// 			"meta.function.parameter"
// 		],
// 		"settings": {
// 			"foreground": "#D0D0D0",
// 			"fontStyle": "italic"
// 		}
// 	},
// 	{
// 		"name": "Array Brackets",
// 		"scope": [
// 			"punctuation.section.array"
// 		],
// 		"settings": {
// 			"foreground": "#D77676"
// 		}
// 	},
// 	{
// 		"name": "New Operator (`$obj = new My_Class`)",
// 		"scope": [
// 			"keyword.other.new"
// 		],
// 		"settings": {
// 			"foreground": "#FF5E5E"
// 		}
// 	},

// // SQL

// 	{
// 		"name": "Operator (`SELECT`, `FROM`, `GROUP BY`, etc.)",
// 		"scope": [
// 			"keyword.other.sql",
// 			"keyword.other.DML.sql",
// 			"keyword.other.alias.sql"
// 		],
// 		"settings": {
// 			"foreground": "#FF5E5E"
// 		}
// 	},
// 	{
// 		"name": "Language Constant (`NULL`)",
// 		"scope": [
// 			"keyword.other.DDL.create.II.sql"
// 		],
// 		"settings": {
// 			"foreground": "#D77676"
// 		}
// 	},

// Markdown

	{
		"name": "Headings (`# My Heading`)",
		"scope": [
			"entity.name.section",
			"punctuation.definition.heading"
		],
		"settings": {
			"foreground": "#FFE082"
		}
	},
	{
		"name": "Beginning Markup (`1.`, `-`, `>`, etc.)",
		"scope": [
			"punctuation.definition.quote.begin.markdown",
			"punctuation.definition.list.begin.markdown"
		],
		"settings": {
			"foreground": "#C9E9E0"
		}
	},
	{
		"name": "Fenced Markup (`*`, `**`, `_`, ```, etc.)",
		"scope": [
			"markup punctuation"
		],
		"settings": {
			"foreground": "#FF5E5E"
		}
	},
	{
		"name": "Fenced Code block (code inside ```)",
		"scope": [
			"markup.fenced_code.block.markdown"
		],
		"settings": {
			"foreground": "#C9E9E0"
		}
	},
	{
		"name": "Link",
		"scope": [
			"string.other.link"
		],
		"settings": {
			"foreground": "#8CDAFF"
		}
	},
	{
		"name": "Link href",
		"scope": [
			"markup.underline.link"
		],
		"settings": {
			"foreground": "#6D6D6D"
		}
	},
	{
		"name": "Link & Image Title",
		"scope": [
			"string.other.link.description.title"
		],
		"settings": {
			"foreground": "#D0D0D0"
		}
	},
	{
		"name": "Link Container Punctuation (`[...](...)`)",
		"scope": [
			"meta.link punctuation"
		],
		"settings": {
			"foreground": "#B2B2B1"
		}
	},
	{
		"name": "Image Container Punctuation (`![...](...)`)",
		"scope": [
			"meta.image punctuation"
		],
		"settings": {
			"foreground": "#B2B2B1"
		}
	}
]
}
